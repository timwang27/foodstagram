{"ast":null,"code":"var _jsxFileName = \"/Users/john.yoon/Documents/UC Berkeley/cs189-local/full_stack_final_project/client/src/Components/RecipeGrid.jsx\";\nimport React, { useState } from 'react';\nimport RecipeCard from './RecipeCard';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport './../App.css';\nimport RandomRecipes from './../randomRecipes.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipeGrid(recipes, shouldSave) {\n  // console.log(recipes) \n  // console.log(RandomRecipes.recipes)\n  if (recipes.recipes) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        md: \"4\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: recipes.recipes.map(r => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(RecipeCard, {\n              sourceUrl: r.sourceUrl,\n              image: r.image,\n              dishType: r.dishTypes[0] && r.dishTypes[0].toUpperCase(),\n              title: r.title,\n              readyInMinutes: r.readyInMinutes,\n              aggregateLikes: r.aggregateLikes,\n              analyzedInstructions: r.analyzedInstructions[0] === undefined ? [\"No instructions given\"] : r.analyzedInstructions[0].steps,\n              extendedIngredients: r.extendedIngredients,\n              id: r.id,\n              shouldSave: shouldSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this);\n  }\n}\n_c = RecipeGrid;\nexport default RecipeGrid;\nvar _c;\n$RefreshReg$(_c, \"RecipeGrid\");","map":{"version":3,"names":["React","useState","RecipeCard","Container","Col","Row","RandomRecipes","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeGrid","recipes","shouldSave","fluid","children","md","map","r","sourceUrl","image","dishType","dishTypes","toUpperCase","title","readyInMinutes","aggregateLikes","analyzedInstructions","undefined","steps","extendedIngredients","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/john.yoon/Documents/UC Berkeley/cs189-local/full_stack_final_project/client/src/Components/RecipeGrid.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport RecipeCard from './RecipeCard';\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport './../App.css';\nimport RandomRecipes from './../randomRecipes.json'\n\nfunction RecipeGrid(recipes, shouldSave) {\n  // console.log(recipes) \n  // console.log(RandomRecipes.recipes)\n  if (recipes.recipes){\n  return (\n        <Container fluid=\"md\" >\n        <Row md=\"4\">\n        <>\n        {recipes.recipes.map((r) => (\n          <Col>\n          <RecipeCard \n            sourceUrl={r.sourceUrl}\n            image={r.image}\n            dishType={r.dishTypes[0] && r.dishTypes[0].toUpperCase()} \n            title={r.title}\n            readyInMinutes={r.readyInMinutes}\n            aggregateLikes={r.aggregateLikes}\n            analyzedInstructions={\n              r.analyzedInstructions[0] === undefined\n              ? [\"No instructions given\"]\n              : r.analyzedInstructions[0].steps}\n            extendedIngredients={r.extendedIngredients}\n            id = {r.id}\n            shouldSave={shouldSave}      \n            >\n          </RecipeCard>\n          </Col>\n        ))}\n      </>\n      </Row>\n      </Container>\n    );\n  }\n}\nexport default RecipeGrid;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAO,cAAc;AACrB,OAAOC,aAAa,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,UAAUA,CAACC,OAAO,EAAEC,UAAU,EAAE;EACvC;EACA;EACA,IAAID,OAAO,CAACA,OAAO,EAAC;IACpB,oBACMJ,OAAA,CAACL,SAAS;MAACW,KAAK,EAAC,IAAI;MAAAC,QAAA,eACrBP,OAAA,CAACH,GAAG;QAACW,EAAE,EAAC,GAAG;QAAAD,QAAA,eACXP,OAAA,CAAAE,SAAA;UAAAK,QAAA,EACCH,OAAO,CAACA,OAAO,CAACK,GAAG,CAAEC,CAAC,iBACrBV,OAAA,CAACJ,GAAG;YAAAW,QAAA,eACJP,OAAA,CAACN,UAAU;cACTiB,SAAS,EAAED,CAAC,CAACC,SAAU;cACvBC,KAAK,EAAEF,CAAC,CAACE,KAAM;cACfC,QAAQ,EAAEH,CAAC,CAACI,SAAS,CAAC,CAAC,CAAC,IAAIJ,CAAC,CAACI,SAAS,CAAC,CAAC,CAAC,CAACC,WAAW,EAAG;cACzDC,KAAK,EAAEN,CAAC,CAACM,KAAM;cACfC,cAAc,EAAEP,CAAC,CAACO,cAAe;cACjCC,cAAc,EAAER,CAAC,CAACQ,cAAe;cACjCC,oBAAoB,EAClBT,CAAC,CAACS,oBAAoB,CAAC,CAAC,CAAC,KAAKC,SAAS,GACrC,CAAC,uBAAuB,CAAC,GACzBV,CAAC,CAACS,oBAAoB,CAAC,CAAC,CAAC,CAACE,KAAM;cACpCC,mBAAmB,EAAEZ,CAAC,CAACY,mBAAoB;cAC3CC,EAAE,EAAIb,CAAC,CAACa,EAAG;cACXlB,UAAU,EAAEA;YAAW;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAEZ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEd;QAAC;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACM;EAEhB;AACF;AAACC,EAAA,GAjCQzB,UAAU;AAkCnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}