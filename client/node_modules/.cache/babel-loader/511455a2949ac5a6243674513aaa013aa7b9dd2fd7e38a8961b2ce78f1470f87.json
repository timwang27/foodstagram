{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Timot\\\\OneDrive\\\\Desktop\\\\full_stack_final_project\\\\client\\\\src\\\\Components\\\\RecipeGrid.jsx\";\nimport React, { useState } from \"react\";\nimport RecipeCard from \"./RecipeCard\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport \"./../App.css\";\nimport RandomRecipes from \"./../randomRecipes.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipeGrid(props) {\n  if (props.recipes) {\n    console.log(props.shouldSave);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        md: \"4\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: props.recipes.map(r => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(RecipeCard, {\n              sourceUrl: r.sourceUrl,\n              image: r.image,\n              dishType: r.dishTypes[0] && r.dishTypes[0].toUpperCase(),\n              title: r.title,\n              readyInMinutes: r.readyInMinutes,\n              aggregateLikes: r.aggregateLikes,\n              analyzedInstructions: r.analyzedInstructions[0] === undefined ? [\"No instructions given\"] : r.analyzedInstructions[0].steps,\n              extendedIngredients: r.extendedIngredients,\n              id: r.id,\n              shouldSave: props.shouldSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = RecipeGrid;\nexport default RecipeGrid;\nvar _c;\n$RefreshReg$(_c, \"RecipeGrid\");","map":{"version":3,"names":["React","useState","RecipeCard","Container","Col","Row","RandomRecipes","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeGrid","props","recipes","console","log","shouldSave","fluid","children","md","map","r","sourceUrl","image","dishType","dishTypes","toUpperCase","title","readyInMinutes","aggregateLikes","analyzedInstructions","undefined","steps","extendedIngredients","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Timot/OneDrive/Desktop/full_stack_final_project/client/src/Components/RecipeGrid.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport RecipeCard from \"./RecipeCard\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"./../App.css\";\r\nimport RandomRecipes from \"./../randomRecipes.json\";\r\n\r\nfunction RecipeGrid(props) {\r\n  if (props.recipes) {\r\n    console.log(props.shouldSave);\r\n    return (\r\n      <Container fluid=\"md\">\r\n        <Row md=\"4\">\r\n          <>\r\n            {props.recipes.map((r) => (\r\n              <Col>\r\n                <RecipeCard\r\n                  sourceUrl={r.sourceUrl}\r\n                  image={r.image}\r\n                  dishType={r.dishTypes[0] && r.dishTypes[0].toUpperCase()}\r\n                  title={r.title}\r\n                  readyInMinutes={r.readyInMinutes}\r\n                  aggregateLikes={r.aggregateLikes}\r\n                  analyzedInstructions={\r\n                    r.analyzedInstructions[0] === undefined\r\n                      ? [\"No instructions given\"]\r\n                      : r.analyzedInstructions[0].steps\r\n                  }\r\n                  extendedIngredients={r.extendedIngredients}\r\n                  id={r.id}\r\n                  shouldSave={props.shouldSave}\r\n                ></RecipeCard>\r\n              </Col>\r\n            ))}\r\n          </>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default RecipeGrid;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAO,cAAc;AACrB,OAAOC,aAAa,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,UAAUA,CAACC,KAAK,EAAE;EACzB,IAAIA,KAAK,CAACC,OAAO,EAAE;IACjBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,UAAU,CAAC;IAC7B,oBACER,OAAA,CAACL,SAAS;MAACc,KAAK,EAAC,IAAI;MAAAC,QAAA,eACnBV,OAAA,CAACH,GAAG;QAACc,EAAE,EAAC,GAAG;QAAAD,QAAA,eACTV,OAAA,CAAAE,SAAA;UAAAQ,QAAA,EACGN,KAAK,CAACC,OAAO,CAACO,GAAG,CAAEC,CAAC,iBACnBb,OAAA,CAACJ,GAAG;YAAAc,QAAA,eACFV,OAAA,CAACN,UAAU;cACToB,SAAS,EAAED,CAAC,CAACC,SAAU;cACvBC,KAAK,EAAEF,CAAC,CAACE,KAAM;cACfC,QAAQ,EAAEH,CAAC,CAACI,SAAS,CAAC,CAAC,CAAC,IAAIJ,CAAC,CAACI,SAAS,CAAC,CAAC,CAAC,CAACC,WAAW,EAAG;cACzDC,KAAK,EAAEN,CAAC,CAACM,KAAM;cACfC,cAAc,EAAEP,CAAC,CAACO,cAAe;cACjCC,cAAc,EAAER,CAAC,CAACQ,cAAe;cACjCC,oBAAoB,EAClBT,CAAC,CAACS,oBAAoB,CAAC,CAAC,CAAC,KAAKC,SAAS,GACnC,CAAC,uBAAuB,CAAC,GACzBV,CAAC,CAACS,oBAAoB,CAAC,CAAC,CAAC,CAACE,KAC/B;cACDC,mBAAmB,EAAEZ,CAAC,CAACY,mBAAoB;cAC3CC,EAAE,EAAEb,CAAC,CAACa,EAAG;cACTlB,UAAU,EAAEJ,KAAK,CAACI;YAAW;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACjB;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAEjB;QAAC;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI;EAEhB;AACF;AAACC,EAAA,GAhCQ5B,UAAU;AAiCnB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}